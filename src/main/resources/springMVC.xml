<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
            http://www.springframework.org/schema/context    
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/data/mongo  
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd
          http://www.springframework.org/schema/data/repository
          http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/mvc
             http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
             http://www.springframework.org/schema/util 
             http://www.springframework.org/schema/util/spring-util-3.1.xsd">

     <context:property-placeholder location="classpath:mongodb.properties" ignore-unresolvable="true"/>
    
    
    <util:properties id="analyseSetting" location="classpath:analyse.properties" />
     <util:properties id="lashouSetting" location="classpath:lashou.properties"/>
    <util:properties id="dianpingSetting" location="classpath:dianping.properties"/>
     <util:properties id="meituanSetting" location="classpath:meituan.properties"/>
      <util:properties id="wowoSetting" location="classpath:wowo.properties"/>
      <util:properties id="nuomiSetting" location="classpath:nuomi.properties"/>
      <util:properties id="didaSetting" location="classpath:dida.properties"/>
    
	<mongo:mongo host="localhost" port="${mongodb.port}">
	</mongo:mongo>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="${mongodb.databaseName}" />
	</bean>

	<context:component-scan base-package="com.sky.tuan.mongodb.repository" />
	<context:component-scan base-package="com.sky.tuan.web.controller" />
    <context:component-scan base-package="com.sky.tuan.web.analyser" />
     <context:component-scan base-package="com.sky.tuan.aop" />
<context:component-scan base-package="com.sky.tuan.cache" />
    <aop:aspectj-autoproxy /> 
    
	<mvc:annotation-driven /> 
    
   <mvc:interceptors>  
       <bean class="com.sky.tuan.web.utils.MainInterceptor" />
    </mvc:interceptors>  
	
	<mvc:default-servlet-handler />
	
	<!-- 多视图处理器 -->
	<bean class="com.sky.tuan.web.utils.MixedViewResolver">
		<property name="resolvers">
			<map>
				<entry key="jsp">
					<bean
						class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="prefix" value="/WEB-INF/jsp/" />
						<property name="viewClass"
							value="org.springframework.web.servlet.view.JstlView"></property>
					</bean>
				</entry>
				<entry key="ftl">
					<bean
						class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
						<property name="cache" value="true" />
						<property name="contentType" value="text/html;charset=UTF-8"></property>
						<!-- 宏命令的支持 -->
						<property name="exposeSpringMacroHelpers" value="true" />
						<property name="viewClass"
							value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
						<property name="requestContextAttribute" value="rc"></property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">5</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>

	<bean id="analyserJob" class="com.sky.tuan.web.job.AnalyserJob">
		<property name="analysers">
			<list>
			
			<ref bean="meiTuanAnalyser" />
			<ref bean="diDaAnalyser" />
			<ref bean="nuoMiAnalyser" />
			<ref bean="woWoAnalyser" />
			<ref bean="laShouAnalyser" />
			 <ref bean="dianPingAnalyser" />
			</list>
		</property>
	</bean>
	<bean id="analyserJobTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类 -->
		<property name="targetObject">
			<ref bean="analyserJob" />
		</property>
		<!-- 调用类中的方法 -->
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean>
	<bean id="analyserDoTime"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="analyserJobTask" />
		</property>
		<property name="cronExpression">
			<value>0 56 00 * * ?</value>
		</property>
	</bean>
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="analyserDoTime" />
			</list>
		</property>
	</bean>
	
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
	<bean
		id="jedisPoolConfig"
		class="redis.clients.jedis.JedisPoolConfig">
		<property
			name="maxActive"
			value="${redis.pool.maxActive}" />
		<property
			name="maxIdle"
			value="${redis.pool.maxIdle}" />
		<property
			name="maxWait"
			value="${redis.pool.maxWait}" />
		<property
			name="testOnBorrow"
			value="${redis.pool.testOnBorrow}" />
	</bean>
		<bean
		id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property
			name="hostName"
			value="${redis.ip}" />
		<property
			name="port"
			value="${redis.port}" />
		<property
			name="poolConfig"
			ref="jedisPoolConfig" />
	</bean>
	<bean  
        class="org.springframework.data.redis.core.RedisTemplate"  
        p:connection-factory-ref="jedisConnectionFactory" />  
        
      <bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
    <property name="servers" value="127.0.0.1:11211"/>
    <property name="protocol" value="BINARY"/>
    <property name="transcoder">
      <bean class="net.spy.memcached.transcoders.SerializingTranscoder">
        <property name="compressionThreshold" value="1024"/>
      </bean>
    </property>
    <property name="opTimeout" value="1000"/>
    <property name="timeoutExceptionThreshold" value="1998"/>
    <property name="hashAlg">
      <value type="net.spy.memcached.DefaultHashAlgorithm">KETAMA_HASH</value>
    </property>
    <property name="locatorType" value="CONSISTENT"/> 
    <property name="failureMode" value="Redistribute"/>
    <property name="useNagleAlgorithm" value="false"/>
  </bean>  
 <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation">    
            <value>classpath:ehcache.xml</value>    
        </property>   
    </bean>  
  
    <bean id="methodCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">  
        <property name="cacheManager">  
            <ref local="cacheManager"/>  
        </property>  
        <property name="cacheName">  
            <value>tuanCache</value>  
        </property>  
    </bean>  
</beans>  